Features:
1) node cut.js -d : -f 2 fileToCut.txt
2) cat fileToCut.txt | node cut.js -d : -f 2
3) node cut.js -d : -f 2,3,4 fileToCut.txt
4) cat fileToCut.txt | node cut.js -d : -f 2,3,4
5) node cut.js -f 2 fileToCut.txt
6) cat fileToCut.txt | node cut.js -f 2
7) node cut.js -f 2,3,4 fileToCut.txt
8) cat fileToCut.txt | node cut.js -f 2,3,4
9) node cut.js -d : -f 2 file1.txt file2.txt
----------------------------
v0.1  
--done-- node cut.js -d : -f 2 fileToCut.txt
  --done-- create files & folders: src test package cut.js cutLib.js cutLibTest.js appTest
  --done-- modules: chai
  --done-- npm init
  --done-- check connections: mocha, cut.js-cutLib, nyc, appTest
  --done-- initial commit

  tasks
    --done-- last step: generateCutLines
    --done-- cutReqPortions
    --done-- readFileContent 
    --done-- parseOptions

v0.2
cat fileToCut.txt | node cut.js -d : -f 2
  tasks
    --done-- change readFileSync to readFile
    readStdInContent
    modify cut - it should decide to take stdin or file
    give standard input
    update tests according to the changes made
    have to give input stream to the reader to load stdin
    have to pass a function which can perform printing of both error and output.